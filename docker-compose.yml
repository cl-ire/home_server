
services:
  yacht:
    image: selfhostedpro/yacht
    container_name: yacht
    ports:
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - yacht:/config
    restart: unless-stopped
    environment:
      TZ: ${TZ}                 # Timezone from the .env file

  wg-easy:
    image: ghcr.io/wg-easy/wg-easy
    container_name: wg-easy
    environment:
      - WG_HOST=${WG_HOST}            # WireGuard host IP from the .env file
      - PASSWORD_HASH=${WG_PASSWORD}  # Admin password for WireGuard from the .env file
      - PORT=51821                    # Port for the web interface.
      - WG_PORT=51820                 # WireGuard port for VPN traffic.
    volumes:
      - ./wg-easy/data:/etc/wireguard
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    restart: unless-stopped
    networks:
      macvlan_net:
        ipv4_address: 192.168.1.206  # Assign a static IP

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    environment:
      - SIGNUPS_ALLOWED=${SIGNUPS_ALLOWED}  # Allow signups from the .env file
    volumes:
      - ./vaultwarden/vw-data:/data
    ports:
      - "82:80"
    restart: unless-stopped

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    environment:
      - TZ=${TZ}                 # Timezone from the .env file
      - WEBPASSWORD=${PIHOLE_PASSWORD}  # Pi-hole admin password from the .env file
      - FTLCONF_LOCAL_IPV4=${PIHOLE_IP} # Pi-hole IP from the .env file
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "81:80/tcp"
    volumes:
      - ./pihole/etc-pihole:/etc/pihole
      - ./pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
  
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    volumes:
      - ./cloudflared:/etc/cloudflared  # Reference to the local cloudflared directory
    command: tunnel run
    restart: unless-stopped
    environment:
      - TUNNEL_TOKEN=${CF_API_TOKEN}
  
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"  # Expose port 80 of the container to port 80 on the host
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Use your custom Nginx config


volumes:
  yacht:


networks:
  macvlan_net:
    external: true