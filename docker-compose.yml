
services:
  yacht:
    image: selfhostedpro/yacht
    container_name: yacht
    ports:
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - yacht:/config
    restart: unless-stopped
    environment:
      TZ: ${TZ}                 # Timezone from the .env file

  wg-easy:
    image: ghcr.io/wg-easy/wg-easy
    container_name: wg-easy
    environment:
      - WG_HOST=${WG_HOST}            # WireGuard host IP from the .env file
      - PASSWORD_HASH=${WG_PASSWORD}  # Admin password for WireGuard from the .env file
      - PORT=51821                    # Port for the web interface.
      - WG_PORT=51820                 # WireGuard port for VPN traffic.
    volumes:
      - ./wg-easy/data:/etc/wireguard
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    restart: unless-stopped

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    environment:
      - SIGNUPS_ALLOWED=${VAULTWARDEN_SIGNUPS_ALLOWED}  # Allow signups from the .env file
      - ADMIN_TOKEN=${VAULTWARDEN_ADMIN_TOKEN}          # Admin token from the .env file
      - PUSH_ENABLED=true
      - PUSH_INSTALLATION_ID=${VAULTWARDEN_PUSH_INSTALLATION_ID}
      - PUSH_INSTALLATION_KEY=${VAULTWARDEN_PUSH_INSTALLATION_KEY}
      - PUSH_RELAY_URI=https://api.bitwarden.eu
      - PUSH_IDENTITY_URI=https://identity.bitwarden.eu
    volumes:
      - ./vaultwarden/vw-data:/data
    ports:
      - "80:80"
    restart: unless-stopped

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    environment:
      - TZ=${TZ}                 # Timezone from the .env file
      - WEBPASSWORD=${PIHOLE_PASSWORD}  # Pi-hole admin password from the .env file
      - FTLCONF_LOCAL_IPV4=${PIHOLE_IP} # Pi-hole IP from the .env file
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "81:80/tcp"
    volumes:
      - ./pihole/etc-pihole:/etc/pihole
      - ./pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
  
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    volumes:
      - ./cloudflared:/etc/cloudflared  # Reference to the local cloudflared directory
    command: tunnel run
    restart: unless-stopped
    environment:
      - TUNNEL_TOKEN=${CF_API_TOKEN} 

  backup:
    build:
      context: ./nas_backup
      dockerfile: Dockerfile.backup
    volumes:
      - nas:/home/nas/
      - ./:/home/home_server/
    environment:
      - NAS_FOLDER=//${NAS_IP}/${NAS_PATH}
      - CRON_SCHEDULE=${BACKUP_CRON_SCHEDULE}
    restart: always
    tty: true


volumes:
  yacht:
  nas:
    driver_opts:
      type: cifs
      device: //${NAS_IP}/${NAS_PATH}
      o: username=${NAS_USERNAME},password=${NAS_PASSWORD},vers=2.1
